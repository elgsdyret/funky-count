{
  "name": "redis-eventemitter",
  "version": "0.2.0",
  "description": "Redis pubsub using an event emitter",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:freeall/redis-eventemitter.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "redis",
    "event",
    "emitter",
    "eventemitter",
    "pubsub",
    "publish",
    "subscribe",
    "unsubscribe",
    "psubscribe",
    "punsubscribe",
    "addlistener",
    "removelistener"
  ],
  "author": {
    "name": "freeall"
  },
  "dependencies": {
    "redis": "~0.9.0"
  },
  "readme": "# redis-eventemitter\n\nUse redis as pubsub using a simple eventemitter.\n\n## API\n\n### .emit(channel, messages...) [publish]\n\n``` js\nvar pubsub = require('redis-eventemitter')(6379, 'localhost', options);\npubsub.emit('myservice:newuser', { id:'a1b2c3' });\n```\n\n### .on(pattern, function(channel, messages...) { ... }) [subscribe]\n\n``` js\nvar pubsub = require('redis-eventemitter')(6379, 'localhost', options);\npubsub.on('*:newuser', function(channel, message) {\n\tconsole.log(channel); // myservice:newuser\n\tconsole.log(message); // { id:'a1b2c3' }\n});\n```\n\n### .on('error', function(err) { ... }) [error handling]\n\nTo be able to handle errors (like when the redis server is down) `.on('error', ...)` should be used.\n\nNote that this means that you can't listen for messages on the `error` channel.\n\n### .removeListener(pattern, listener)\n\nRemoves listener.\n\n### .removeAllListeners(pattern)\n\nRemoves all listeners.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/freeall/redis-eventemitter/issues"
  },
  "homepage": "https://github.com/freeall/redis-eventemitter",
  "_id": "redis-eventemitter@0.2.0",
  "_from": "redis-eventemitter@"
}
